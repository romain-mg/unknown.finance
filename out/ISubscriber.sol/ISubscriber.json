{"abi":[{"type":"function","name":"notifyBurn","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"},{"name":"info","type":"uint256","internalType":"PositionInfo"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"notifyModifyLiquidity","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"liquidityChange","type":"int256","internalType":"int256"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"notifySubscribe","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"notifyUnsubscribe","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"notifyBurn(uint256,address,uint256,uint256,int256)":"b1a9116f","notifyModifyLiquidity(uint256,int256,int256)":"d8865c27","notifySubscribe(uint256,bytes)":"8d57f6b2","notifyUnsubscribe(uint256)":"af45dd14"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"PositionInfo\",\"name\":\"info\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"name\":\"notifyBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"liquidityChange\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"}],\"name\":\"notifyModifyLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"notifySubscribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"notifyUnsubscribe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"notifyBurn(uint256,address,uint256,uint256,int256)\":{\"params\":{\"feesAccrued\":\"the fees accrued by the position if liquidity was decreased\",\"info\":\"information about the position\",\"liquidity\":\"the amount of liquidity decreased in the position, may be 0\",\"owner\":\"the current owner of the tokenId\",\"tokenId\":\"the token ID of the position\"}},\"notifyModifyLiquidity(uint256,int256,int256)\":{\"details\":\"Note that feesAccrued can be artificially inflated by a malicious user Pools with a single liquidity position can inflate feeGrowthGlobal (and consequently feesAccrued) by donating to themselves; atomically donating and collecting fees within the same unlockCallback may further inflate feeGrowthGlobal/feesAccrued\",\"params\":{\"feesAccrued\":\"the fees to be collected from the position as a result of the modifyLiquidity call\",\"liquidityChange\":\"the change in liquidity on the underlying position\",\"tokenId\":\"the token ID of the position\"}},\"notifySubscribe(uint256,bytes)\":{\"params\":{\"data\":\"additional data passed in by the caller\",\"tokenId\":\"the token ID of the position\"}},\"notifyUnsubscribe(uint256)\":{\"details\":\"This call's gas is capped at `unsubscribeGasLimit` (set at deployment)Because of EIP-150, solidity may only allocate 63/64 of gasleft()\",\"params\":{\"tokenId\":\"the token ID of the position\"}}},\"title\":\"ISubscriber\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"notifyBurn(uint256,address,uint256,uint256,int256)\":{\"notice\":\"Called when a position is burned\"},\"notifyModifyLiquidity(uint256,int256,int256)\":{\"notice\":\"Called when a position modifies its liquidity or collects fees\"},\"notifySubscribe(uint256,bytes)\":{\"notice\":\"Called when a position subscribes to this subscriber contract\"},\"notifyUnsubscribe(uint256)\":{\"notice\":\"Called when a position unsubscribes from the subscriber\"}},\"notice\":\"Interface that a Subscriber contract should implement to receive updates from the v4 position manager\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/src/interfaces/ISubscriber.sol\":\"ISubscriber\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/universal-router/=lib/universal-router.git/\",\":@uniswap/v2-core/=lib/v2-core/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/universal-router.git/lib/v3-periphery/\",\":@uniswap/v4-core/=lib/v4-core/\",\":@uniswap/v4-periphery/=lib/v4-periphery/\",\":ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":fhevm-contracts/=node_modules/fhevm-contracts/\",\":fhevm-core-contracts/=node_modules/fhevm-core-contracts/\",\":fhevm/=node_modules/fhevm/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/permit2/lib/solmate/\",\":universal-router.git/=lib/universal-router.git/\",\":v2-core/=lib/v2-core/contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/universal-router.git/lib/v3-periphery/contracts/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c\",\"dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb\"]},\"lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27\",\"dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V\"]},\"lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/src/interfaces/ISubscriber.sol\":{\"keccak256\":\"0x34ceadec4a63019680e543fe73197f198a55c825d86e18f327840354760b57e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31734feafe1fe162a0702ddf862fcc3bd97505931afb3c685033c0185d898051\",\"dweb:/ipfs/QmQEANYVyaXTNzXKcjUVfPhLU71Bix5vxQH75BpPWMkWgw\"]},\"lib/v4-periphery/src/libraries/PositionInfoLibrary.sol\":{\"keccak256\":\"0xc5ddf96bd088bc87ea50a20f907fc932fb28397a42682a301b268a11b7f34078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dfeb4dc747537240f8167243e8066b6f5f08057386fb8bda93f82973fc18ad6\",\"dweb:/ipfs/Qmby9DAAaHj8hjsMUnqY3vjqCHKGAKrT5EULMmeGcjbbGx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"PositionInfo","name":"info","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"notifyBurn"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"int256","name":"liquidityChange","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"notifyModifyLiquidity"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"notifySubscribe"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"notifyUnsubscribe"}],"devdoc":{"kind":"dev","methods":{"notifyBurn(uint256,address,uint256,uint256,int256)":{"params":{"feesAccrued":"the fees accrued by the position if liquidity was decreased","info":"information about the position","liquidity":"the amount of liquidity decreased in the position, may be 0","owner":"the current owner of the tokenId","tokenId":"the token ID of the position"}},"notifyModifyLiquidity(uint256,int256,int256)":{"details":"Note that feesAccrued can be artificially inflated by a malicious user Pools with a single liquidity position can inflate feeGrowthGlobal (and consequently feesAccrued) by donating to themselves; atomically donating and collecting fees within the same unlockCallback may further inflate feeGrowthGlobal/feesAccrued","params":{"feesAccrued":"the fees to be collected from the position as a result of the modifyLiquidity call","liquidityChange":"the change in liquidity on the underlying position","tokenId":"the token ID of the position"}},"notifySubscribe(uint256,bytes)":{"params":{"data":"additional data passed in by the caller","tokenId":"the token ID of the position"}},"notifyUnsubscribe(uint256)":{"details":"This call's gas is capped at `unsubscribeGasLimit` (set at deployment)Because of EIP-150, solidity may only allocate 63/64 of gasleft()","params":{"tokenId":"the token ID of the position"}}},"version":1},"userdoc":{"kind":"user","methods":{"notifyBurn(uint256,address,uint256,uint256,int256)":{"notice":"Called when a position is burned"},"notifyModifyLiquidity(uint256,int256,int256)":{"notice":"Called when a position modifies its liquidity or collects fees"},"notifySubscribe(uint256,bytes)":{"notice":"Called when a position subscribes to this subscriber contract"},"notifyUnsubscribe(uint256)":{"notice":"Called when a position unsubscribes from the subscriber"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-core/node_modules/@ensdomains/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/universal-router/=lib/universal-router.git/","@uniswap/v2-core/=lib/v2-core/","@uniswap/v3-core/=lib/v3-core/","@uniswap/v3-periphery/=lib/universal-router.git/lib/v3-periphery/","@uniswap/v4-core/=lib/v4-core/","@uniswap/v4-periphery/=lib/v4-periphery/","ds-test/=lib/permit2/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","fhevm-contracts/=node_modules/fhevm-contracts/","fhevm-core-contracts/=node_modules/fhevm-core-contracts/","fhevm/=node_modules/fhevm/","forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/permit2/","solmate/=lib/permit2/lib/solmate/","universal-router.git/=lib/universal-router.git/","v2-core/=lib/v2-core/contracts/","v3-core/=lib/v3-core/","v3-periphery/=lib/universal-router.git/lib/v3-periphery/contracts/","v4-core/=lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-periphery/src/interfaces/ISubscriber.sol":"ISubscriber"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43","urls":["bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1","dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"],"license":"MIT"},"lib/v4-core/src/interfaces/IExttload.sol":{"keccak256":"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937","urls":["bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8","dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"],"license":"MIT"},"lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0x4c9571aed0c2b6ef11832545554fc11ffdb03746daaf5c73683c00600bfc7ec0","urls":["bzz-raw://e78b34b58ce9de91b91943b4f3cc3ce121d0b151e123e8a600ac5ef64d91db6c","dweb:/ipfs/QmRkaQnPCYwLrXgbpGujJTx32PaZK63KSPJJV1XmnQuCMb"],"license":"MIT"},"lib/v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0x3534f00531038e77ab8a7fc4d0a6e0993ee53fb7a396b1324ad917318ea46cea","urls":["bzz-raw://0a4a7e771828dc40848485b568a1cf514f553ace6653f4f4d1ad3f3e9cdb6c27","dweb:/ipfs/QmTjzQ7KVYnrEWtxPER2E4MXzycgcznfzSDsZtd5turk5V"],"license":"MIT"},"lib/v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848","urls":["bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d","dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-core/src/interfaces/external/IERC6909Claims.sol":{"keccak256":"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48","urls":["bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f","dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"],"license":"MIT"},"lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"},"lib/v4-periphery/src/interfaces/ISubscriber.sol":{"keccak256":"0x34ceadec4a63019680e543fe73197f198a55c825d86e18f327840354760b57e7","urls":["bzz-raw://31734feafe1fe162a0702ddf862fcc3bd97505931afb3c685033c0185d898051","dweb:/ipfs/QmQEANYVyaXTNzXKcjUVfPhLU71Bix5vxQH75BpPWMkWgw"],"license":"MIT"},"lib/v4-periphery/src/libraries/PositionInfoLibrary.sol":{"keccak256":"0xc5ddf96bd088bc87ea50a20f907fc932fb28397a42682a301b268a11b7f34078","urls":["bzz-raw://7dfeb4dc747537240f8167243e8066b6f5f08057386fb8bda93f82973fc18ad6","dweb:/ipfs/Qmby9DAAaHj8hjsMUnqY3vjqCHKGAKrT5EULMmeGcjbbGx"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-periphery/src/interfaces/ISubscriber.sol","id":23829,"exportedSymbols":{"BalanceDelta":[21563],"ISubscriber":[23828],"PositionInfo":[24519]},"nodeType":"SourceUnit","src":"32:2238:130","nodes":[{"id":23781,"nodeType":"PragmaDirective","src":"32:23:130","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":23783,"nodeType":"ImportDirective","src":"57:73:130","nodes":[],"absolutePath":"lib/v4-core/src/types/BalanceDelta.sol","file":"@uniswap/v4-core/src/types/BalanceDelta.sol","nameLocation":"-1:-1:-1","scope":23829,"sourceUnit":21722,"symbolAliases":[{"foreign":{"id":23782,"name":"BalanceDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21563,"src":"65:12:130","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":23785,"nodeType":"ImportDirective","src":"131:66:130","nodes":[],"absolutePath":"lib/v4-periphery/src/libraries/PositionInfoLibrary.sol","file":"../libraries/PositionInfoLibrary.sol","nameLocation":"-1:-1:-1","scope":23829,"sourceUnit":24646,"symbolAliases":[{"foreign":{"id":23784,"name":"PositionInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24519,"src":"139:12:130","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":23828,"nodeType":"ContractDefinition","src":"336:1933:130","nodes":[{"id":23794,"nodeType":"FunctionDefinition","src":"554:70:130","nodes":[],"documentation":{"id":23787,"nodeType":"StructuredDocumentation","src":"364:185:130","text":"@notice Called when a position subscribes to this subscriber contract\n @param tokenId the token ID of the position\n @param data additional data passed in by the caller"},"functionSelector":"8d57f6b2","implemented":false,"kind":"function","modifiers":[],"name":"notifySubscribe","nameLocation":"563:15:130","parameters":{"id":23792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23789,"mutability":"mutable","name":"tokenId","nameLocation":"587:7:130","nodeType":"VariableDeclaration","scope":23794,"src":"579:15:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23788,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:130","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23791,"mutability":"mutable","name":"data","nameLocation":"609:4:130","nodeType":"VariableDeclaration","scope":23794,"src":"596:17:130","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":23790,"name":"bytes","nodeType":"ElementaryTypeName","src":"596:5:130","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"578:36:130"},"returnParameters":{"id":23793,"nodeType":"ParameterList","parameters":[],"src":"623:0:130"},"scope":23828,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":23800,"nodeType":"FunctionDefinition","src":"917:53:130","nodes":[],"documentation":{"id":23795,"nodeType":"StructuredDocumentation","src":"630:282:130","text":"@notice Called when a position unsubscribes from the subscriber\n @dev This call's gas is capped at `unsubscribeGasLimit` (set at deployment)\n @dev Because of EIP-150, solidity may only allocate 63/64 of gasleft()\n @param tokenId the token ID of the position"},"functionSelector":"af45dd14","implemented":false,"kind":"function","modifiers":[],"name":"notifyUnsubscribe","nameLocation":"926:17:130","parameters":{"id":23798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23797,"mutability":"mutable","name":"tokenId","nameLocation":"952:7:130","nodeType":"VariableDeclaration","scope":23800,"src":"944:15:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23796,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:130","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"943:17:130"},"returnParameters":{"id":23799,"nodeType":"ParameterList","parameters":[],"src":"969:0:130"},"scope":23828,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":23816,"nodeType":"FunctionDefinition","src":"1354:133:130","nodes":[],"documentation":{"id":23801,"nodeType":"StructuredDocumentation","src":"976:373:130","text":"@notice Called when a position is burned\n @param tokenId the token ID of the position\n @param owner the current owner of the tokenId\n @param info information about the position\n @param liquidity the amount of liquidity decreased in the position, may be 0\n @param feesAccrued the fees accrued by the position if liquidity was decreased"},"functionSelector":"b1a9116f","implemented":false,"kind":"function","modifiers":[],"name":"notifyBurn","nameLocation":"1363:10:130","parameters":{"id":23814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23803,"mutability":"mutable","name":"tokenId","nameLocation":"1382:7:130","nodeType":"VariableDeclaration","scope":23816,"src":"1374:15:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:130","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23805,"mutability":"mutable","name":"owner","nameLocation":"1399:5:130","nodeType":"VariableDeclaration","scope":23816,"src":"1391:13:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23804,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:130","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23808,"mutability":"mutable","name":"info","nameLocation":"1419:4:130","nodeType":"VariableDeclaration","scope":23816,"src":"1406:17:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PositionInfo_$24519","typeString":"PositionInfo"},"typeName":{"id":23807,"nodeType":"UserDefinedTypeName","pathNode":{"id":23806,"name":"PositionInfo","nameLocations":["1406:12:130"],"nodeType":"IdentifierPath","referencedDeclaration":24519,"src":"1406:12:130"},"referencedDeclaration":24519,"src":"1406:12:130","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_PositionInfo_$24519","typeString":"PositionInfo"}},"visibility":"internal"},{"constant":false,"id":23810,"mutability":"mutable","name":"liquidity","nameLocation":"1433:9:130","nodeType":"VariableDeclaration","scope":23816,"src":"1425:17:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1425:7:130","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23813,"mutability":"mutable","name":"feesAccrued","nameLocation":"1457:11:130","nodeType":"VariableDeclaration","scope":23816,"src":"1444:24:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$21563","typeString":"BalanceDelta"},"typeName":{"id":23812,"nodeType":"UserDefinedTypeName","pathNode":{"id":23811,"name":"BalanceDelta","nameLocations":["1444:12:130"],"nodeType":"IdentifierPath","referencedDeclaration":21563,"src":"1444:12:130"},"referencedDeclaration":21563,"src":"1444:12:130","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$21563","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"1373:96:130"},"returnParameters":{"id":23815,"nodeType":"ParameterList","parameters":[],"src":"1486:0:130"},"scope":23828,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":23827,"nodeType":"FunctionDefinition","src":"2160:107:130","nodes":[],"documentation":{"id":23817,"nodeType":"StructuredDocumentation","src":"1493:662:130","text":"@notice Called when a position modifies its liquidity or collects fees\n @param tokenId the token ID of the position\n @param liquidityChange the change in liquidity on the underlying position\n @param feesAccrued the fees to be collected from the position as a result of the modifyLiquidity call\n @dev Note that feesAccrued can be artificially inflated by a malicious user\n Pools with a single liquidity position can inflate feeGrowthGlobal (and consequently feesAccrued) by donating to themselves;\n atomically donating and collecting fees within the same unlockCallback may further inflate feeGrowthGlobal/feesAccrued"},"functionSelector":"d8865c27","implemented":false,"kind":"function","modifiers":[],"name":"notifyModifyLiquidity","nameLocation":"2169:21:130","parameters":{"id":23825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23819,"mutability":"mutable","name":"tokenId","nameLocation":"2199:7:130","nodeType":"VariableDeclaration","scope":23827,"src":"2191:15:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:130","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":23821,"mutability":"mutable","name":"liquidityChange","nameLocation":"2215:15:130","nodeType":"VariableDeclaration","scope":23827,"src":"2208:22:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":23820,"name":"int256","nodeType":"ElementaryTypeName","src":"2208:6:130","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":23824,"mutability":"mutable","name":"feesAccrued","nameLocation":"2245:11:130","nodeType":"VariableDeclaration","scope":23827,"src":"2232:24:130","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$21563","typeString":"BalanceDelta"},"typeName":{"id":23823,"nodeType":"UserDefinedTypeName","pathNode":{"id":23822,"name":"BalanceDelta","nameLocations":["2232:12:130"],"nodeType":"IdentifierPath","referencedDeclaration":21563,"src":"2232:12:130"},"referencedDeclaration":21563,"src":"2232:12:130","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_BalanceDelta_$21563","typeString":"BalanceDelta"}},"visibility":"internal"}],"src":"2190:67:130"},"returnParameters":{"id":23826,"nodeType":"ParameterList","parameters":[],"src":"2266:0:130"},"scope":23828,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISubscriber","contractDependencies":[],"contractKind":"interface","documentation":{"id":23786,"nodeType":"StructuredDocumentation","src":"199:137:130","text":"@title ISubscriber\n @notice Interface that a Subscriber contract should implement to receive updates from the v4 position manager"},"fullyImplemented":false,"linearizedBaseContracts":[23828],"name":"ISubscriber","nameLocation":"346:11:130","scope":23829,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":130}